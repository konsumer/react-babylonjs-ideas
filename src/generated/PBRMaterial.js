import React from 'react'

class PBRMaterial extends React.Component {
  constructor (props) {
    super(props)
    const { directIntensity, emissiveIntensity, environmentIntensity, specularIntensity, disableBumpMap, albedoTexture, ambientTexture, ambientTextureStrength, ambientTextureImpactOnAnalyticalLights, opacityTexture, reflectionTexture, emissiveTexture, reflectivityTexture, metallicTexture, metallic, roughness, microSurfaceTexture, bumpTexture, lightmapTexture, refractionTexture, ambientColor, albedoColor, reflectivityColor, reflectionColor, emissiveColor, microSurface, indexOfRefraction, invertRefractionY, linkRefractionWithTransparency, useLightmapAsShadowmap, useAlphaFromAlbedoTexture, forceAlphaTest, alphaCutOff, useSpecularOverAlpha, useMicroSurfaceFromReflectivityMapAlpha, useRoughnessFromMetallicTextureAlpha, useRoughnessFromMetallicTextureGreen, useMetallnessFromMetallicTextureBlue, useAmbientOcclusionFromMetallicTextureRed, useAmbientInGrayScale, useAutoMicroSurfaceFromReflectivityMap, usePhysicalLightFalloff, useGLTFLightFalloff, useRadianceOverAlpha, useObjectSpaceNormalMap, useParallax, useParallaxOcclusion, parallaxScaleBias, disableLighting, forceIrradianceInFragment, maxSimultaneousLights, invertNormalMapX, invertNormalMapY, twoSidedLighting, useAlphaFresnel, useLinearAlphaFresnel, environmentBRDFTexture, forceNormalForward, enableSpecularAntiAliasing, useHorizonOcclusion, useRadianceOcclusion, unlit, imageProcessingConfiguration, cameraColorCurvesEnabled, cameraColorGradingEnabled, cameraToneMappingEnabled, cameraExposure, cameraContrast, cameraColorGradingTexture, cameraColorCurves } = props
    this.PBRMaterial = new PBRMaterial(directIntensity, emissiveIntensity, environmentIntensity, specularIntensity, disableBumpMap, albedoTexture, ambientTexture, ambientTextureStrength, ambientTextureImpactOnAnalyticalLights, opacityTexture, reflectionTexture, emissiveTexture, reflectivityTexture, metallicTexture, metallic, roughness, microSurfaceTexture, bumpTexture, lightmapTexture, refractionTexture, ambientColor, albedoColor, reflectivityColor, reflectionColor, emissiveColor, microSurface, indexOfRefraction, invertRefractionY, linkRefractionWithTransparency, useLightmapAsShadowmap, useAlphaFromAlbedoTexture, forceAlphaTest, alphaCutOff, useSpecularOverAlpha, useMicroSurfaceFromReflectivityMapAlpha, useRoughnessFromMetallicTextureAlpha, useRoughnessFromMetallicTextureGreen, useMetallnessFromMetallicTextureBlue, useAmbientOcclusionFromMetallicTextureRed, useAmbientInGrayScale, useAutoMicroSurfaceFromReflectivityMap, usePhysicalLightFalloff, useGLTFLightFalloff, useRadianceOverAlpha, useObjectSpaceNormalMap, useParallax, useParallaxOcclusion, parallaxScaleBias, disableLighting, forceIrradianceInFragment, maxSimultaneousLights, invertNormalMapX, invertNormalMapY, twoSidedLighting, useAlphaFresnel, useLinearAlphaFresnel, environmentBRDFTexture, forceNormalForward, enableSpecularAntiAliasing, useHorizonOcclusion, useRadianceOcclusion, unlit, imageProcessingConfiguration, cameraColorCurvesEnabled, cameraColorGradingEnabled, cameraToneMappingEnabled, cameraExposure, cameraContrast, cameraColorGradingTexture, cameraColorCurves)
  }

  render () {
    return null
  }
}

export default PBRMaterial

