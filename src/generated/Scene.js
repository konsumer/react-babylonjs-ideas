import React from 'react'

class Scene extends React.Component {
  constructor (props) {
    super(props)
    const { autoClear, autoClearDepthAndStencil, clearColor, ambientColor, environmentTexture, imageProcessingConfiguration, forceWireframe, forcePointsCloud, clipPlane, clipPlane2, clipPlane3, clipPlane4, animationsEnabled, animationPropertiesOverride, useConstantAnimationDeltaTime, constantlyUpdateMeshUnderPointer, hoverCursor, defaultCursor, preventDefaultOnPointerDown, metadata, loadingPluginName, disableOfflineSupportExceptionRules, onDisposeObservable, onDispose, onBeforeRenderObservable, beforeRender, onAfterRenderObservable, afterRender, onBeforeAnimationsObservable, onAfterAnimationsObservable, onBeforeDrawPhaseObservable, onAfterDrawPhaseObservable, onReadyObservable, onBeforeCameraRenderObservable, beforeCameraRender, onAfterCameraRenderObservable, afterCameraRender, onBeforeActiveMeshesEvaluationObservable, onAfterActiveMeshesEvaluationObservable, onBeforeParticlesRenderingObservable, onAfterParticlesRenderingObservable, onDataLoadedObservable, onNewCameraAddedObservable, onCameraRemovedObservable, onNewLightAddedObservable, onLightRemovedObservable, onNewGeometryAddedObservable, onGeometryRemovedObservable, onNewTransformNodeAddedObservable, onTransformNodeRemovedObservable, onNewMeshAddedObservable, onMeshRemovedObservable, onNewMaterialAddedObservable, onMaterialRemovedObservable, onNewTextureAddedObservable, onTextureRemovedObservable, onBeforeRenderTargetsRenderObservable, onAfterRenderTargetsRenderObservable, onBeforeStepObservable, onAfterStepObservable, onBeforeRenderingGroupObservable, onAfterRenderingGroupObservable, onMeshImportedObservable, pointerDownPredicate, pointerUpPredicate, pointerMovePredicate, onPointerMove, onPointerDown, onPointerUp, onPointerPick, onPrePointerObservable, onPointerObservable, unTranslatedPointer, cameraToUseForPointers, onPreKeyboardObservable, onKeyboardObservable, useRightHandedSystem, fogEnabled, fogMode, fogColor, fogDensity, fogStart, fogEnd, shadowsEnabled, lightsEnabled, activeCameras, activeCamera, defaultMaterial, texturesEnabled, particlesEnabled, spritesEnabled, skeletonsEnabled, lensFlaresEnabled, collisionsEnabled, collisionCoordinator, gravity, postProcessesEnabled, postProcesses, postProcessManager, renderTargetsEnabled, dumpNextRenderTargets, customRenderTargets, useDelayedTextureLoading, importedMeshesFiles, probesEnabled, database, actionManager, proceduralTexturesEnabled, animationTimeScale, dispatchAllSubMeshesOfActiveMeshes, frustumPlanes, requireLightSorting, workerCollisions, meshUnderPointer, pointerX, pointerY, totalVerticesPerfCounter, totalActiveIndicesPerfCounter, activeParticlesPerfCounter, activeBonesPerfCounter, interFramePerfCounter, lastFramePerfCounter, evaluateActiveMeshesDurationPerfCounter, renderDurationPerfCounter, particlesDurationPerfCounter, spriteDuractionPerfCounter, isLoading, animatables, uid, getActiveMeshCandidates, getActiveSubMeshCandidates, getIntersectingSubMeshCandidates, getCollidingSubMeshCandidates, getDeterministicFrameTime, isDisposed, blockMaterialDirtyMechanism } = props
    this.Scene = new Scene(autoClear, autoClearDepthAndStencil, clearColor, ambientColor, environmentTexture, imageProcessingConfiguration, forceWireframe, forcePointsCloud, clipPlane, clipPlane2, clipPlane3, clipPlane4, animationsEnabled, animationPropertiesOverride, useConstantAnimationDeltaTime, constantlyUpdateMeshUnderPointer, hoverCursor, defaultCursor, preventDefaultOnPointerDown, metadata, loadingPluginName, disableOfflineSupportExceptionRules, onDisposeObservable, onDispose, onBeforeRenderObservable, beforeRender, onAfterRenderObservable, afterRender, onBeforeAnimationsObservable, onAfterAnimationsObservable, onBeforeDrawPhaseObservable, onAfterDrawPhaseObservable, onReadyObservable, onBeforeCameraRenderObservable, beforeCameraRender, onAfterCameraRenderObservable, afterCameraRender, onBeforeActiveMeshesEvaluationObservable, onAfterActiveMeshesEvaluationObservable, onBeforeParticlesRenderingObservable, onAfterParticlesRenderingObservable, onDataLoadedObservable, onNewCameraAddedObservable, onCameraRemovedObservable, onNewLightAddedObservable, onLightRemovedObservable, onNewGeometryAddedObservable, onGeometryRemovedObservable, onNewTransformNodeAddedObservable, onTransformNodeRemovedObservable, onNewMeshAddedObservable, onMeshRemovedObservable, onNewMaterialAddedObservable, onMaterialRemovedObservable, onNewTextureAddedObservable, onTextureRemovedObservable, onBeforeRenderTargetsRenderObservable, onAfterRenderTargetsRenderObservable, onBeforeStepObservable, onAfterStepObservable, onBeforeRenderingGroupObservable, onAfterRenderingGroupObservable, onMeshImportedObservable, pointerDownPredicate, pointerUpPredicate, pointerMovePredicate, onPointerMove, onPointerDown, onPointerUp, onPointerPick, onPrePointerObservable, onPointerObservable, unTranslatedPointer, cameraToUseForPointers, onPreKeyboardObservable, onKeyboardObservable, useRightHandedSystem, fogEnabled, fogMode, fogColor, fogDensity, fogStart, fogEnd, shadowsEnabled, lightsEnabled, activeCameras, activeCamera, defaultMaterial, texturesEnabled, particlesEnabled, spritesEnabled, skeletonsEnabled, lensFlaresEnabled, collisionsEnabled, collisionCoordinator, gravity, postProcessesEnabled, postProcesses, postProcessManager, renderTargetsEnabled, dumpNextRenderTargets, customRenderTargets, useDelayedTextureLoading, importedMeshesFiles, probesEnabled, database, actionManager, proceduralTexturesEnabled, animationTimeScale, dispatchAllSubMeshesOfActiveMeshes, frustumPlanes, requireLightSorting, workerCollisions, meshUnderPointer, pointerX, pointerY, totalVerticesPerfCounter, totalActiveIndicesPerfCounter, activeParticlesPerfCounter, activeBonesPerfCounter, interFramePerfCounter, lastFramePerfCounter, evaluateActiveMeshesDurationPerfCounter, renderDurationPerfCounter, particlesDurationPerfCounter, spriteDuractionPerfCounter, isLoading, animatables, uid, getActiveMeshCandidates, getActiveSubMeshCandidates, getIntersectingSubMeshCandidates, getCollidingSubMeshCandidates, getDeterministicFrameTime, isDisposed, blockMaterialDirtyMechanism)
  }

  render () {
    return null
  }
}

export default Scene

